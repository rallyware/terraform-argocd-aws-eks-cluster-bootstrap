fullnameOverride: ${fullname_override}

%{ if role_enabled }
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: ${role_arn}
    eks.amazonaws.com/sts-regional-endpoints: "${sts_regional_endpoints}"
%{ endif }

compactor:
  config:
    compaction:
      block_retention: 48h

queryFrontend:
  query:
    enabled: false

search:
  enabled: true

traces:
  jaeger:
    grpc: true
    thriftBinary: true
    thriftCompact: true
    thriftHttp: true
  otlp:
    grpc: true
    http: true
  zipkin: true

config: |
  multitenancy_enabled: true
  search_enabled: {{ .Values.search.enabled }}
  compactor:
    compaction:
      block_retention: {{ .Values.compactor.config.compaction.block_retention }}
    ring:
      kvstore:
        store: memberlist
  distributor:
    ring:
      kvstore:
        store: memberlist
    receivers:
      {{- if  or (.Values.traces.jaeger.thriftCompact) (.Values.traces.jaeger.thriftBinary) (.Values.traces.jaeger.thriftHttp) (.Values.traces.jaeger.grpc) }}
      jaeger:
        protocols:
          {{- if .Values.traces.jaeger.thriftCompact }}
          thrift_compact:
            endpoint: 0.0.0.0:6831
          {{- end }}
          {{- if .Values.traces.jaeger.thriftBinary }}
          thrift_binary:
            endpoint: 0.0.0.0:6832
          {{- end }}
          {{- if .Values.traces.jaeger.thriftHttp }}
          thrift_http:
            endpoint: 0.0.0.0:14268
          {{- end }}
          {{- if .Values.traces.jaeger.grpc }}
          grpc:
            endpoint: 0.0.0.0:14250
          {{- end }}
      {{- end }}
      {{- if .Values.traces.zipkin}}
      zipkin:
        endpoint: 0.0.0.0:9411
      {{- end }}
      {{- if or (.Values.traces.otlp.http) (.Values.traces.otlp.grpc) }}
      otlp:
        protocols:
          {{- if .Values.traces.otlp.http }}
          http:
            endpoint: 0.0.0.0:55681
          {{- end }}
          {{- if .Values.traces.otlp.grpc }}
          grpc:
            endpoint: 0.0.0.0:4317
          {{- end }}
      {{- end }}
      {{- if .Values.traces.opencensus }}
      opencensus:
        endpoint: 0.0.0.0:55678
      {{- end }}
      {{- if .Values.traces.kafka }}
      kafka:
        {{- toYaml .Values.traces.kafka | nindent 6 }}
      {{- end }}
  querier:
    frontend_worker:
      frontend_address: {{ include "tempo.queryFrontendFullname" . }}-discovery:9095
      {{- if .Values.querier.config.frontend_worker.grpc_client_config }}
      grpc_client_config:
        {{- toYaml .Values.querier.config.frontend_worker.grpc_client_config | nindent 6 }}
      {{- end }}
  ingester:
    lifecycler:
      ring:
        replication_factor: 1
        kvstore:
          store: memberlist
      tokens_file_path: /var/tempo/tokens.json
  memberlist:
    abort_if_cluster_join_fails: false
    join_members:
      - {{ include "tempo.fullname" . }}-gossip-ring
  overrides:
    {{- toYaml .Values.global_overrides | nindent 2 }}
  server:
    http_listen_port: {{ .Values.server.httpListenPort }}
    log_level: {{ .Values.server.logLevel }}
    log_format: {{ .Values.server.logFormat }}
    grpc_server_max_recv_msg_size: {{ .Values.server.grpc_server_max_recv_msg_size }}
    grpc_server_max_send_msg_size: {{ .Values.server.grpc_server_max_send_msg_size }}
  storage:
    trace:
      backend: {{.Values.storage.trace.backend}}
      {{- if eq .Values.storage.trace.backend "gcs"}}
      gcs:
        {{- toYaml .Values.storage.trace.gcs | nindent 6}}
      {{- end}}
      {{- if eq .Values.storage.trace.backend "s3"}}
      s3:
        {{- toYaml .Values.storage.trace.s3 | nindent 6}}
      {{- end}}
      {{- if eq .Values.storage.trace.backend "azure"}}
      azure:
        {{- toYaml .Values.storage.trace.azure | nindent 6}}
      {{- end}}
      blocklist_poll: 5m
      local:
        path: /var/tempo/traces
      wal:
        path: /var/tempo/wal
      cache: memcached
      memcached:
        consistent_hash: true
        host: {{ include "tempo.fullname" . }}-memcached
        service: memcached-client
        timeout: 500ms

%{ if role_enabled }
storage:
  trace:
    backend: s3
    s3:
      bucket: ${bucket_id}
      endpoint: ${format("s3.%s.amazonaws.com", region)}
%{ endif }

gateway:
  enabled: false

memcached:
  enabled: true

memcachedExporter:
  enabled: true

serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
