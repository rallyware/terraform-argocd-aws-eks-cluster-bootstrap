nameOverride: ""
fullnameOverride: ""

provisioners:
  []
  # - name: default
  #   spec:
  #     # If omitted, the feature is disabled and nodes will never expire.  If set to less time than it requires for a node
  #     # to become ready, the node may expire before any pods successfully start.
  #     ttlSecondsUntilExpired: 2592000 # 30 Days = 60 * 60 * 24 * 30 Seconds;

  #     # If omitted, the feature is disabled, nodes will never scale down due to low utilization
  #     ttlSecondsAfterEmpty: 30

  #     # Provisioned nodes will have these taints
  #     # Taints may prevent pods from scheduling if they are not tolerated by the pod.
  #     taints:
  #       - key: example.com/special-taint
  #         effect: NoSchedule

  #     # Provisioned nodes will have these taints, but pods do not need to tolerate these taints to be provisioned by this
  #     # provisioner. These taints are expected to be temporary and some other entity (e.g. a DaemonSet) is responsible for
  #     # removing the taint after it has finished initializing the node.
  #     startupTaints:
  #       - key: example.com/another-taint
  #         effect: NoSchedule

  #     # Labels are arbitrary key-values that are applied to all nodes
  #     labels:
  #       billing-team: my-team

  #     # Requirements that constrain the parameters of provisioned nodes.
  #     # These requirements are combined with pod.spec.affinity.nodeAffinity rules.
  #     # Operators { In, NotIn } are supported to enable including or excluding values
  #     requirements:
  #       - key: "node.kubernetes.io/instance-type"
  #         operator: In
  #         values: ["m5.large", "m5.2xlarge"]
  #       - key: "topology.kubernetes.io/zone"
  #         operator: In
  #         values: ["us-west-2a", "us-west-2b"]
  #       - key: "kubernetes.io/arch"
  #         operator: In
  #         values: ["arm64", "amd64"]
  #       - key: "karpenter.sh/capacity-type" # If not included, the webhook for the AWS cloud provider will default to on-demand
  #         operator: In
  #         values: ["spot", "on-demand"]

  #     # Karpenter provides the ability to specify a few additional Kubelet args.
  #     # These are all optional and provide support for additional customization and use cases.
  #     kubeletConfiguration:
  #       clusterDNS: ["10.0.1.100"]

  #     # Resource limits constrain the total size of the cluster.
  #     # Limits prevent Karpenter from creating new instances once the limit is exceeded.
  #     limits:
  #       resources:
  #         cpu: "1000"
  #         memory: 1000Gi

  #     # These fields vary per cloud provider, see your cloud provider specific documentation
  #     provider:
  #       launchTemplate: KarpenterCustomLaunchTemplate
  #       subnetSelector:
  #         karpenter.sh/discovery: CLUSTER_NAME

nodetemplates:
  # - name: default
  #   spec:
  #     subnetSelector:
  #       karpenter.sh/discovery: CLUSTER_NAME
  #     securityGroupSelector:
  #       karpenter.sh/discovery: CLUSTER_NAME
  #     instanceProfile: MyInstanceProfile
  #     launchTemplate: MyLaunchTemplate
  #     tags:
  #       InternalAccountingTag: "1234"
